{"ast":null,"code":"import _slicedToArray from \"/home/will/Projects/sdhacks19/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/will/Projects/sdhacks19/client/src/components/JournalEditor.jsx\";\nimport React from 'react';\nimport uploadFileToS3 from '../scripts/uploadFileToS3';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport InsertPhotoIcon from '@material-ui/icons/InsertPhoto';\nimport { useTheme } from '@material-ui/core/styles';\nimport { makeStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles(theme => ({\n  addBtn: {\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n    border: 0,\n    borderRadius: 3,\n    color: 'white',\n    padding: '0 30px',\n    minWidth: 275,\n    minHeight: 275\n  },\n  addFab: {\n    position: 'fixed',\n    zIndex: 100\n  },\n  addIcon: {\n    marginRight: theme.spacing(1) // marginLeft: theme.spacing(0)\n\n  },\n  addImageBtn: {\n    borderRadius: 3,\n    minWidth: 100,\n    padding: '10px 30px'\n  },\n  imgPreview: {\n    width: '90%',\n    margin: '10px'\n  },\n  dialogFormBody: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  dialogInsertImage: {\n    minWidth: 200,\n    textAlign: 'center'\n  },\n  input: {\n    display: 'none'\n  }\n}));\nexport default function JournalEditor({\n  questions\n  /* array of strings */\n\n}) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n\n  const _React$useState = React.useState(false),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        open = _React$useState2[0],\n        setOpen = _React$useState2[1];\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setImgUrl(undefined);\n  };\n\n  const handleSubmit = () => {\n    handleClose();\n\n    if (imgFile) {\n      return uploadFileToS3(imgFile); // return uploadFileToS3(imgFile).then(val => {\n      //     console.log(val);\n      // });\n    }\n  };\n\n  const _React$useState3 = React.useState(undefined),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        imgUrl = _React$useState4[0],\n        setImgUrl = _React$useState4[1];\n\n  const _React$useState5 = React.useState(undefined),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        imgFile = _React$useState6[0],\n        setImgFile = _React$useState6[1];\n\n  const handleImageChange = e => {\n    setImgUrl(URL.createObjectURL(e.target.files[0]));\n    setImgFile(e.target.files[0]);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(Button, {\n    className: classes.addBtn,\n    onClick: handleClickOpen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, \"Write new entry\"), React.createElement(Fab, {\n    color: \"primary\",\n    \"aria-label\": \"add\",\n    className: classes.addFab,\n    onClick: handleClickOpen,\n    variant: \"extended\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(AddIcon, {\n    className: classes.addIcon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }), \" Write new entry\"), React.createElement(Dialog, {\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"form-dialog-title\",\n    fullScreen: fullScreen,\n    maxWidth: \"lg\",\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, new Date().toLocaleString()), React.createElement(DialogContent, {\n    className: fullScreen ? '' : classes.dialogFormBody,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(DialogContent, {\n    className: classes.dialogInsertImage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, imgUrl !== undefined && React.createElement(\"img\", {\n    src: imgUrl,\n    className: classes.imgPreview,\n    alt: \"Your upload\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    accept: \"image/*\",\n    className: classes.input,\n    style: {\n      display: 'none'\n    },\n    id: \"raised-button-file\",\n    type: \"file\",\n    onChange: handleImageChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"raised-button-file\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, React.createElement(Button, {\n    className: classes.addImageBtn,\n    variant: \"outlined\",\n    component: \"span\",\n    startIcon: React.createElement(InsertPhotoIcon, {\n      fontSize: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, \"Insert Image\"))), React.createElement(DialogContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, questions.map((question, idx) => {\n    return React.createElement(DialogContent, {\n      key: idx,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(DialogContentText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, question), React.createElement(TextField, {\n      autoFocus: idx === 0,\n      margin: \"dense\",\n      id: \"ans\" + idx,\n      label: \"Answer\",\n      type: \"text\",\n      fullWidth: true,\n      variant: \"filled\",\n      multiline: true,\n      rowsMax: \"4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }));\n  }))), React.createElement(DialogActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: handleClose,\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, \"Cancel\"), React.createElement(Button, {\n    onClick: handleSubmit,\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, \"Submit\"))));\n}","map":{"version":3,"sources":["/home/will/Projects/sdhacks19/client/src/components/JournalEditor.jsx"],"names":["React","uploadFileToS3","Button","TextField","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Fab","AddIcon","useMediaQuery","InsertPhotoIcon","useTheme","makeStyles","useStyles","theme","addBtn","background","border","borderRadius","color","padding","minWidth","minHeight","addFab","position","zIndex","addIcon","marginRight","spacing","addImageBtn","imgPreview","width","margin","dialogFormBody","display","alignItems","dialogInsertImage","textAlign","input","JournalEditor","questions","classes","fullScreen","breakpoints","down","useState","open","setOpen","handleClickOpen","handleClose","setImgUrl","undefined","handleSubmit","imgFile","imgUrl","setImgFile","handleImageChange","e","URL","createObjectURL","target","files","Date","toLocaleString","map","question","idx"],"mappings":"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","sourcesContent":["import React from 'react';\nimport uploadFileToS3 from '../scripts/uploadFileToS3';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport InsertPhotoIcon from '@material-ui/icons/InsertPhoto';\nimport { useTheme } from '@material-ui/core/styles';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n    addBtn: {\n        background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n        border: 0,\n        borderRadius: 3,\n        color: 'white',\n        padding: '0 30px',\n        minWidth: 275,\n        minHeight: 275\n    },\n    addFab: {\n        position: 'fixed',\n        zIndex: 100,\n    },\n    addIcon: {\n        marginRight: theme.spacing(1),\n        // marginLeft: theme.spacing(0)\n    },\n    addImageBtn: {\n        borderRadius: 3,\n        minWidth: 100,\n        padding: '10px 30px',\n    },\n    imgPreview: {\n        width: '90%',\n        margin: '10px'\n    },\n    dialogFormBody: {\n        display: 'flex',\n        alignItems: 'center'\n    },\n    dialogInsertImage: {\n        minWidth: 200,\n        textAlign: 'center',\n    },\n    input: {\n        display: 'none'\n    }\n}));\n\nexport default function JournalEditor({ questions /* array of strings */ }) {\n    const classes = useStyles();\n    const theme = useTheme();\n    const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n\n    const [open, setOpen] = React.useState(false);\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n        setImgUrl(undefined);\n    };\n\n    const handleSubmit = () => {\n        handleClose();\n        if (imgFile) {\n            return uploadFileToS3(imgFile);\n            // return uploadFileToS3(imgFile).then(val => {\n            //     console.log(val);\n            // });\n        }\n    }\n\n    const [imgUrl, setImgUrl] = React.useState(undefined);\n    const [imgFile, setImgFile] = React.useState(undefined);\n\n    const handleImageChange = (e) => {\n        setImgUrl(URL.createObjectURL(e.target.files[0]));\n        setImgFile(e.target.files[0]);\n    }\n\n    return (\n        <div>\n            <Button className={classes.addBtn} onClick={handleClickOpen}>\n                Write new entry\n            </Button>\n            <Fab\n                color=\"primary\"\n                aria-label=\"add\"\n                className={classes.addFab}\n                onClick={handleClickOpen}\n                variant=\"extended\"\n            >\n                <AddIcon className={classes.addIcon} /> Write new entry\n            </Fab>\n            <Dialog\n                open={open}\n                onClose={handleClose}\n                aria-labelledby=\"form-dialog-title\"\n                fullScreen={fullScreen}\n                maxWidth=\"lg\"\n                fullWidth\n            >\n                <DialogTitle id=\"form-dialog-title\">{(new Date()).toLocaleString()}</DialogTitle>\n                <DialogContent className={fullScreen ? '' : classes.dialogFormBody}>\n                    <DialogContent className={classes.dialogInsertImage}>\n                        {imgUrl !== undefined && <img src={imgUrl} className={classes.imgPreview} alt=\"Your upload\" />}\n                        <input\n                            accept=\"image/*\"\n                            className={classes.input}\n                            style={{ display: 'none' }}\n                            id=\"raised-button-file\"\n                            type=\"file\"\n                            onChange={handleImageChange}\n                        />\n                        <label htmlFor=\"raised-button-file\">\n                            <Button\n                                className={classes.addImageBtn}\n                                variant=\"outlined\"\n                                component=\"span\"\n                                startIcon={<InsertPhotoIcon fontSize=\"large\" />}\n                            >\n                                Insert Image\n                            </Button>\n                        </label>\n                    </DialogContent>\n                    <DialogContent>\n                        {\n                            questions.map((question, idx) => {\n                                return (\n                                    <DialogContent key={idx}>\n                                        <DialogContentText>\n                                            {question}\n                                        </DialogContentText>\n                                        <TextField\n                                            autoFocus={idx === 0}\n                                            margin=\"dense\"\n                                            id={\"ans\" + idx}\n                                            label=\"Answer\"\n                                            type=\"text\"\n                                            fullWidth\n                                            variant=\"filled\"\n                                            multiline\n                                            rowsMax=\"4\"\n                                        />\n                                    </DialogContent>\n                                );\n                            })\n                        }\n                    </DialogContent>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\">\n                        Cancel\n                    </Button>\n                    <Button onClick={handleSubmit} color=\"primary\">\n                        Submit\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"const AWS = require('aws-sdk');\n\nconst fs = require('fs');\n\nAWS.config.update({\n  region: 'us-west-2'\n});\nconst BUCKET_NAME = \"sdhacks19-journal\";\nconst API_VERSION = '2006-03-01';\nconst s3 = new AWS.S3({\n  apiVersion: API_VERSION\n});\nexport default function uploadFileToS3(filename, file) {\n  // call S3 to retrieve upload file to specified bucket\n  var uploadParams = {\n    Bucket: BUCKET_NAME,\n    Key: '',\n    Body: ''\n  }; // Configure the file stream and obtain the upload parameters\n\n  var fileStream = fs.createReadStream(file);\n  fileStream.on('error', function (err) {\n    console.log('File Error', err);\n  });\n  uploadParams.Body = fileStream;\n\n  var path = require('path');\n\n  uploadParams.Key = path.basename(file); // call S3 to retrieve upload file to specified bucket\n\n  s3.upload(uploadParams, function (err, data) {\n    if (err) {\n      console.log(\"Error\", err);\n    }\n\n    if (data) {\n      console.log(\"Upload Success\", data.Location);\n    }\n  });\n}","map":{"version":3,"sources":["/home/will/Projects/sdhacks19/client/src/scripts/uploadFileToS3.js"],"names":["AWS","require","fs","config","update","region","BUCKET_NAME","API_VERSION","s3","S3","apiVersion","uploadFileToS3","filename","file","uploadParams","Bucket","Key","Body","fileStream","createReadStream","on","err","console","log","path","basename","upload","data","Location"],"mappings":"AAAA,MAAMA,GAAG,GAAGC,OAAO,CAAC,SAAD,CAAnB;;AACA,MAAMC,EAAE,GAAGD,OAAO,CAAC,IAAD,CAAlB;;AAEAD,GAAG,CAACG,MAAJ,CAAWC,MAAX,CAAkB;AACdC,EAAAA,MAAM,EAAE;AADM,CAAlB;AAGA,MAAMC,WAAW,GAAG,mBAApB;AACA,MAAMC,WAAW,GAAG,YAApB;AACA,MAAMC,EAAE,GAAG,IAAIR,GAAG,CAACS,EAAR,CAAW;AAClBC,EAAAA,UAAU,EAAEH;AADM,CAAX,CAAX;AAIA,eAAe,SAASI,cAAT,CAAwBC,QAAxB,EAAkCC,IAAlC,EAAwC;AACnD;AACA,MAAIC,YAAY,GAAG;AACfC,IAAAA,MAAM,EAAET,WADO;AAEfU,IAAAA,GAAG,EAAE,EAFU;AAGfC,IAAAA,IAAI,EAAE;AAHS,GAAnB,CAFmD,CAQnD;;AACA,MAAIC,UAAU,GAAGhB,EAAE,CAACiB,gBAAH,CAAoBN,IAApB,CAAjB;AACAK,EAAAA,UAAU,CAACE,EAAX,CAAc,OAAd,EAAuB,UAAUC,GAAV,EAAe;AAClCC,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BF,GAA1B;AACH,GAFD;AAGAP,EAAAA,YAAY,CAACG,IAAb,GAAoBC,UAApB;;AACA,MAAIM,IAAI,GAAGvB,OAAO,CAAC,MAAD,CAAlB;;AACAa,EAAAA,YAAY,CAACE,GAAb,GAAmBQ,IAAI,CAACC,QAAL,CAAcZ,IAAd,CAAnB,CAfmD,CAiBnD;;AACAL,EAAAA,EAAE,CAACkB,MAAH,CAAUZ,YAAV,EAAwB,UAAUO,GAAV,EAAeM,IAAf,EAAqB;AACzC,QAAIN,GAAJ,EAAS;AACLC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,GAArB;AACH;;AACD,QAAIM,IAAJ,EAAU;AACNL,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BI,IAAI,CAACC,QAAnC;AACH;AACJ,GAPD;AAQH","sourcesContent":["const AWS = require('aws-sdk');\nconst fs = require('fs');\n\nAWS.config.update({\n    region: 'us-west-2'\n});\nconst BUCKET_NAME = \"sdhacks19-journal\";\nconst API_VERSION = '2006-03-01'\nconst s3 = new AWS.S3({\n    apiVersion: API_VERSION,\n});\n\nexport default function uploadFileToS3(filename, file) {\n    // call S3 to retrieve upload file to specified bucket\n    var uploadParams = {\n        Bucket: BUCKET_NAME,\n        Key: '',\n        Body: ''\n    };\n\n    // Configure the file stream and obtain the upload parameters\n    var fileStream = fs.createReadStream(file);\n    fileStream.on('error', function (err) {\n        console.log('File Error', err);\n    });\n    uploadParams.Body = fileStream;\n    var path = require('path');\n    uploadParams.Key = path.basename(file);\n\n    // call S3 to retrieve upload file to specified bucket\n    s3.upload(uploadParams, function (err, data) {\n        if (err) {\n            console.log(\"Error\", err);\n        }\n        if (data) {\n            console.log(\"Upload Success\", data.Location);\n        }\n    });\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import React from'react';import Grid from'@material-ui/core/Grid';import PastEntry from'./PastEntry.jsx';import JournalEditor from'./JournalEditor.jsx';import MonthBreak from'./MonthBreak.jsx';import{makeStyles}from'@material-ui/core/styles';import Button from'@material-ui/core/Button';var useStyles=makeStyles(function(theme){return{root:{margin:\"0 5rem\"}};});var QUESTIONS=[\"What did you do today?\",\"What are you doing tomorrow?\",\"LOL idk this is a very long question to test if the styling works please ignore or if you feel like answering please tell me what your favorite fruit is. Rules: it cannot be pineapple, or apple, or anything that is not watermelon because watermelon is the only correct answer. Choose carefully. LOL idk this is a very long question to test if the styling works please ignore or if you feel like answering please tell me what your favorite fruit is. Rules: it cannot be pineapple, or apple, or anything that is not watermelon because watermelon is the only correct answer. Choose carefully.\"];var sampleEntry={\"time\":1572141478124,\"imgURL\":\"https://i.pinimg.com/originals/18/4d/9d/184d9deff2f1ddf83afe1a02ab5560dd.gif\",\"ans\":[\"I saw a tree.\",\"It was cool.\",\"It had a lot of colors.\"],\"keyword\":\"Sunset Beach\",\"SentimentScore\":{\"Mixed\":0.030585512690246105,\"Positive\":0.94992071056365967,\"Neutral\":0.0141543131828308,\"Negative\":0.00893945890665054},\"Sentiment\":\"POSITIVE\",\"LanguageCode\":\"en\"};export default function JournalGrid(_ref){var data=_ref.data;var classes=useStyles();// const renderEntries = () => (\n//     // Loop through the entries and render a grid \n//     for(i = 0; i < data.length; ++i) {\n//     }\n//     return entryGridItems;      ;\nreturn React.createElement(\"div\",{className:classes.root},React.createElement(Grid,{container:true,spacing:3},React.createElement(Grid,{item:true,xs:12},React.createElement(MonthBreak,{date:new Date()})),React.createElement(Grid,{item:true},React.createElement(JournalEditor,{questions:QUESTIONS})),React.createElement(Grid,{item:true,xs:12,md:4,lg:3},React.createElement(PastEntry,{entry:sampleEntry})),React.createElement(Grid,{item:true,xs:12,md:4,lg:3},React.createElement(PastEntry,{entry:sampleEntry})),React.createElement(Grid,{item:true,xs:12,md:4,lg:3},React.createElement(PastEntry,{entry:sampleEntry})),React.createElement(Grid,{item:true,xs:12,md:4,lg:3},React.createElement(PastEntry,{entry:sampleEntry})),React.createElement(Grid,{item:true,xs:12},React.createElement(MonthBreak,{date:new Date(2000,2,9)})),React.createElement(Grid,{item:true,xs:12,md:4,lg:3},React.createElement(PastEntry,{entry:sampleEntry}))));}","map":{"version":3,"sources":["/home/will/Projects/sdhacks19/client/src/components/JournalGrid.jsx"],"names":["React","Grid","PastEntry","JournalEditor","MonthBreak","makeStyles","Button","useStyles","theme","root","margin","QUESTIONS","sampleEntry","JournalGrid","data","classes","Date"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAGA,MAAOC,CAAAA,IAAP,KAAiB,wBAAjB,CACA,MAAOC,CAAAA,SAAP,KAAsB,iBAAtB,CACA,MAAOC,CAAAA,aAAP,KAA0B,qBAA1B,CACA,MAAOC,CAAAA,UAAP,KAAuB,kBAAvB,CACA,OAASC,UAAT,KAA2B,0BAA3B,CACA,MAAOC,CAAAA,MAAP,KAAmB,0BAAnB,CAEA,GAAMC,CAAAA,SAAS,CAAGF,UAAU,CAAC,SAAAG,KAAK,QAAK,CACnCC,IAAI,CAAE,CACFC,MAAM,CAAE,QADN,CAD6B,CAAL,EAAN,CAA5B,CAMA,GAAMC,CAAAA,SAAS,CAAG,CACd,wBADc,CAEd,8BAFc,CAGd,+kBAHc,CAAlB,CAMA,GAAMC,CAAAA,WAAW,CAAG,CAChB,OAAQ,aADQ,CAEhB,SAAU,8EAFM,CAGhB,MAAO,CACH,eADG,CAEH,cAFG,CAGH,yBAHG,CAHS,CAQhB,UAAW,cARK,CAShB,iBAAkB,CACd,QAAS,oBADK,CAEd,WAAY,mBAFE,CAGd,UAAW,kBAHG,CAId,WAAY,mBAJE,CATF,CAehB,YAAa,UAfG,CAgBhB,eAAgB,IAhBA,CAApB,CAmBA,cAAe,SAASC,CAAAA,WAAT,MAA+B,IAARC,CAAAA,IAAQ,MAARA,IAAQ,CAC1C,GAAMC,CAAAA,OAAO,CAAGR,SAAS,EAAzB,CAGA;AACA;AACA;AAEA;AACA;AACA,MACI,4BAAK,SAAS,CAAEQ,OAAO,CAACN,IAAxB,EACI,oBAAC,IAAD,EAAM,SAAS,KAAf,CAAgB,OAAO,CAAE,CAAzB,EACI,oBAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,EAAf,EACI,oBAAC,UAAD,EAAY,IAAI,CAAE,GAAIO,CAAAA,IAAJ,EAAlB,EADJ,CADJ,CAKI,oBAAC,IAAD,EAAM,IAAI,KAAV,EACI,oBAAC,aAAD,EAAe,SAAS,CAAEL,SAA1B,EADJ,CALJ,CAWI,oBAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,EAAf,CAAmB,EAAE,CAAE,CAAvB,CAA0B,EAAE,CAAE,CAA9B,EACI,oBAAC,SAAD,EAAW,KAAK,CAAEC,WAAlB,EADJ,CAXJ,CAcI,oBAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,EAAf,CAAmB,EAAE,CAAE,CAAvB,CAA0B,EAAE,CAAE,CAA9B,EACI,oBAAC,SAAD,EAAW,KAAK,CAAEA,WAAlB,EADJ,CAdJ,CAiBI,oBAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,EAAf,CAAmB,EAAE,CAAE,CAAvB,CAA0B,EAAE,CAAE,CAA9B,EACI,oBAAC,SAAD,EAAW,KAAK,CAAEA,WAAlB,EADJ,CAjBJ,CAoBI,oBAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,EAAf,CAAmB,EAAE,CAAE,CAAvB,CAA0B,EAAE,CAAE,CAA9B,EACI,oBAAC,SAAD,EAAW,KAAK,CAAEA,WAAlB,EADJ,CApBJ,CAuBI,oBAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,EAAf,EACI,oBAAC,UAAD,EAAY,IAAI,CAAE,GAAII,CAAAA,IAAJ,CAAS,IAAT,CAAe,CAAf,CAAkB,CAAlB,CAAlB,EADJ,CAvBJ,CA0BI,oBAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,EAAf,CAAmB,EAAE,CAAE,CAAvB,CAA0B,EAAE,CAAE,CAA9B,EACI,oBAAC,SAAD,EAAW,KAAK,CAAEJ,WAAlB,EADJ,CA1BJ,CADJ,CADJ,CAkCH","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Grid from '@material-ui/core/Grid';\nimport PastEntry from './PastEntry.jsx';\nimport JournalEditor from './JournalEditor.jsx';\nimport MonthBreak from './MonthBreak.jsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        margin: \"0 5rem\",\n    }\n}));\n\nconst QUESTIONS = [\n    \"What did you do today?\",\n    \"What are you doing tomorrow?\",\n    \"LOL idk this is a very long question to test if the styling works please ignore or if you feel like answering please tell me what your favorite fruit is. Rules: it cannot be pineapple, or apple, or anything that is not watermelon because watermelon is the only correct answer. Choose carefully. LOL idk this is a very long question to test if the styling works please ignore or if you feel like answering please tell me what your favorite fruit is. Rules: it cannot be pineapple, or apple, or anything that is not watermelon because watermelon is the only correct answer. Choose carefully.\"\n]\n\nconst sampleEntry = {\n    \"time\": 1572141478124,\n    \"imgURL\": \"https://i.pinimg.com/originals/18/4d/9d/184d9deff2f1ddf83afe1a02ab5560dd.gif\",\n    \"ans\": [\n        \"I saw a tree.\",\n        \"It was cool.\",\n        \"It had a lot of colors.\"\n    ],\n    \"keyword\": \"Sunset Beach\",\n    \"SentimentScore\": {\n        \"Mixed\": 0.030585512690246105,\n        \"Positive\": 0.94992071056365967,\n        \"Neutral\": 0.0141543131828308,\n        \"Negative\": 0.00893945890665054\n    },\n    \"Sentiment\": \"POSITIVE\",\n    \"LanguageCode\": \"en\"\n}\n\nexport default function JournalGrid({ data }) {\n    const classes = useStyles();\n\n\n    // const renderEntries = () => (\n    //     // Loop through the entries and render a grid \n    //     for(i = 0; i < data.length; ++i) {\n\n    //     }\n    //     return entryGridItems;      ;\n    return (\n        <div className={classes.root}>\n            <Grid container spacing={3}>\n                <Grid item xs={12}>\n                    <MonthBreak date={new Date()}></MonthBreak>\n                </Grid>\n                {/* <Grid item xs={12} md={4} lg={3}> */}\n                <Grid item>\n                    <JournalEditor questions={QUESTIONS} />\n                    {/* <Button variant=\"outlined\" size=\"large\" className={classes.addBtn}>\n                        Large\n                    </Button> */}\n                </Grid>\n                <Grid item xs={12} md={4} lg={3}>\n                    <PastEntry entry={sampleEntry} />\n                </Grid >\n                <Grid item xs={12} md={4} lg={3}>\n                    <PastEntry entry={sampleEntry} />\n                </Grid >\n                <Grid item xs={12} md={4} lg={3}>\n                    <PastEntry entry={sampleEntry} />\n                </Grid >\n                <Grid item xs={12} md={4} lg={3}>\n                    <PastEntry entry={sampleEntry} />\n                </Grid >\n                <Grid item xs={12}>\n                    <MonthBreak date={new Date(2000, 2, 9)}></MonthBreak>\n                </Grid>\n                <Grid item xs={12} md={4} lg={3}>\n                    <PastEntry entry={sampleEntry} />\n                </Grid >\n            </Grid>\n        </div>\n    );\n}\n\nJournalGrid.propTypes = {\n    data: PropTypes.array\n};"]},"metadata":{},"sourceType":"module"}
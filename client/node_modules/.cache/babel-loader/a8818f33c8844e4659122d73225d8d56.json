{"ast":null,"code":"import _slicedToArray from \"/home/will/Projects/sdhacks19/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/will/Projects/sdhacks19/client/src/components/JournalGrid.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport PastEntry from './PastEntry.jsx';\nimport JournalEditor from './JournalEditor.jsx';\nimport MonthBreak from './MonthBreak.jsx';\nimport { makeStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    margin: \"0 5rem\"\n  }\n}));\nconst QUESTIONS = [\"What did you do today?\", \"What are you doing tomorrow?\", \"LOL idk this is a very long question to test if the styling works please ignore or if you feel like answering please tell me what your favorite fruit is. Rules: it cannot be pineapple, or apple, or anything that is not watermelon because watermelon is the only correct answer. Choose carefully. LOL idk this is a very long question to test if the styling works please ignore or if you feel like answering please tell me what your favorite fruit is. Rules: it cannot be pineapple, or apple, or anything that is not watermelon because watermelon is the only correct answer. Choose carefully.\"];\nconst sampleEntry = {\n  \"time\": 1572141478124,\n  \"imgURL\": \"https://i.pinimg.com/originals/18/4d/9d/184d9deff2f1ddf83afe1a02ab5560dd.gif\",\n  \"ans\": [\"I saw a tree.\", \"It was cool.\", \"It had a lot of colors.\"],\n  \"keyword\": \"Sunset Beach\",\n  \"SentimentScore\": {\n    \"Mixed\": 0.030585512690246105,\n    \"Positive\": 0.94992071056365967,\n    \"Neutral\": 0.0141543131828308,\n    \"Negative\": 0.00893945890665054\n  },\n  \"Sentiment\": \"POSITIVE\",\n  \"LanguageCode\": \"en\"\n};\nexport default function JournalGrid({\n  data\n}) {\n  const classes = useStyles();\n\n  const _React$useState = React.useState([]),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        imgUrls = _React$useState2[0],\n        setImgUrls = _React$useState2[1]; // const renderEntries = () => (\n  //     // Loop through the entries and render a grid \n  //     for(i = 0; i < data.length; ++i) {\n  //     }\n  //     return entryGridItems;      ;\n\n\n  return React.createElement(Paper, {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(MonthBreak, {\n    date: new Date(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(JournalEditor, {\n    questions: QUESTIONS,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 4,\n    lg: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(PastEntry, {\n    entry: sampleEntry,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 4,\n    lg: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(PastEntry, {\n    entry: sampleEntry,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 4,\n    lg: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(PastEntry, {\n    entry: sampleEntry,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 4,\n    lg: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(PastEntry, {\n    entry: sampleEntry,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(MonthBreak, {\n    date: new Date(2000, 2, 9),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 4,\n    lg: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(PastEntry, {\n    entry: sampleEntry,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }))));\n}\nJournalGrid.propTypes = {\n  data: PropTypes.array\n};","map":{"version":3,"sources":["/home/will/Projects/sdhacks19/client/src/components/JournalGrid.jsx"],"names":["React","PropTypes","Grid","Paper","PastEntry","JournalEditor","MonthBreak","makeStyles","useStyles","theme","root","margin","QUESTIONS","sampleEntry","JournalGrid","data","classes","useState","imgUrls","setImgUrls","Date","propTypes","array"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport PastEntry from './PastEntry.jsx';\nimport JournalEditor from './JournalEditor.jsx';\nimport MonthBreak from './MonthBreak.jsx';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        margin: \"0 5rem\",\n    }\n}));\n\nconst QUESTIONS = [\n    \"What did you do today?\",\n    \"What are you doing tomorrow?\",\n    \"LOL idk this is a very long question to test if the styling works please ignore or if you feel like answering please tell me what your favorite fruit is. Rules: it cannot be pineapple, or apple, or anything that is not watermelon because watermelon is the only correct answer. Choose carefully. LOL idk this is a very long question to test if the styling works please ignore or if you feel like answering please tell me what your favorite fruit is. Rules: it cannot be pineapple, or apple, or anything that is not watermelon because watermelon is the only correct answer. Choose carefully.\"\n]\n\nconst sampleEntry = {\n    \"time\": 1572141478124,\n    \"imgURL\": \"https://i.pinimg.com/originals/18/4d/9d/184d9deff2f1ddf83afe1a02ab5560dd.gif\",\n    \"ans\": [\n        \"I saw a tree.\",\n        \"It was cool.\",\n        \"It had a lot of colors.\"\n    ],\n    \"keyword\": \"Sunset Beach\",\n    \"SentimentScore\": {\n        \"Mixed\": 0.030585512690246105,\n        \"Positive\": 0.94992071056365967,\n        \"Neutral\": 0.0141543131828308,\n        \"Negative\": 0.00893945890665054\n    },\n    \"Sentiment\": \"POSITIVE\",\n    \"LanguageCode\": \"en\"\n}\n\nexport default function JournalGrid({ data }) {\n    const classes = useStyles();\n\n    const [imgUrls, setImgUrls] = React.useState([]);\n\n    // const renderEntries = () => (\n    //     // Loop through the entries and render a grid \n    //     for(i = 0; i < data.length; ++i) {\n\n    //     }\n    //     return entryGridItems;      ;\n    return (\n        <Paper className={classes.root}>\n            <Grid container spacing={3}>\n                <Grid item xs={12}>\n                    <MonthBreak date={new Date()}></MonthBreak>\n                </Grid>\n                {/* <Grid item xs={12} md={4} lg={3}> */}\n                <Grid item>\n                    <JournalEditor questions={QUESTIONS} />\n                    {/* <Button variant=\"outlined\" size=\"large\" className={classes.addBtn}>\n                        Large\n                    </Button> */}\n                </Grid>\n                <Grid item xs={12} md={4} lg={3}>\n                    <PastEntry entry={sampleEntry} />\n                </Grid >\n                <Grid item xs={12} md={4} lg={3}>\n                    <PastEntry entry={sampleEntry} />\n                </Grid >\n                <Grid item xs={12} md={4} lg={3}>\n                    <PastEntry entry={sampleEntry} />\n                </Grid >\n                <Grid item xs={12} md={4} lg={3}>\n                    <PastEntry entry={sampleEntry} />\n                </Grid >\n                <Grid item xs={12}>\n                    <MonthBreak date={new Date(2000, 2, 9)}></MonthBreak>\n                </Grid>\n                <Grid item xs={12} md={4} lg={3}>\n                    <PastEntry entry={sampleEntry} />\n                </Grid >\n            </Grid>\n        </Paper>\n    );\n}\n\nJournalGrid.propTypes = {\n    data: PropTypes.array\n};"]},"metadata":{},"sourceType":"module"}
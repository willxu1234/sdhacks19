{"ast":null,"code":"import _slicedToArray from\"/home/will/Projects/sdhacks19/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from'react';import uploadFileToS3 from'../scripts/uploadFileToS3';import Button from'@material-ui/core/Button';import TextField from'@material-ui/core/TextField';import Dialog from'@material-ui/core/Dialog';import DialogActions from'@material-ui/core/DialogActions';import DialogContent from'@material-ui/core/DialogContent';import DialogContentText from'@material-ui/core/DialogContentText';import DialogTitle from'@material-ui/core/DialogTitle';import useMediaQuery from'@material-ui/core/useMediaQuery';import InsertPhotoIcon from'@material-ui/icons/InsertPhoto';import{useTheme}from'@material-ui/core/styles';import{makeStyles}from'@material-ui/core/styles';var useStyles=makeStyles(function(theme){return{addBtn:{background:'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',border:0,borderRadius:3,color:'white',padding:'0 30px',minWidth:275,minHeight:275},addImageBtn:{borderRadius:3,minWidth:100,padding:'10px 30px'},imgPreview:{width:'90%',margin:'10px'},dialogFormBody:{display:'flex',alignItems:'center'},dialogInsertImage:{minWidth:200,textAlign:'center'},input:{display:'none'}};});export default function JournalEditor(_ref){var questions=_ref.questions;var classes=useStyles();var theme=useTheme();var fullScreen=useMediaQuery(theme.breakpoints.down('sm'));var _React$useState=React.useState(false),_React$useState2=_slicedToArray(_React$useState,2),open=_React$useState2[0],setOpen=_React$useState2[1];var handleClickOpen=function handleClickOpen(){setOpen(true);};var handleClose=function handleClose(){setOpen(false);setImgUrl(undefined);};var handleSubmit=function handleSubmit(){uploadFileToS3(imgFile);handleClose();};var _React$useState3=React.useState(undefined),_React$useState4=_slicedToArray(_React$useState3,2),imgUrl=_React$useState4[0],setImgUrl=_React$useState4[1];var _React$useState5=React.useState(undefined),_React$useState6=_slicedToArray(_React$useState5,2),imgFile=_React$useState6[0],setImgFile=_React$useState6[1];var handleImageChange=function handleImageChange(e){setImgUrl(URL.createObjectURL(e.target.files[0]));setImgFile(e.target.files[0]);};return React.createElement(\"div\",null,React.createElement(Button,{className:classes.addBtn,onClick:handleClickOpen},\"Write new entry\"),React.createElement(Dialog,{open:open,onClose:handleClose,\"aria-labelledby\":\"form-dialog-title\",fullScreen:fullScreen,maxWidth:\"lg\",fullWidth:true},React.createElement(DialogTitle,{id:\"form-dialog-title\"},new Date().toLocaleString()),React.createElement(DialogContent,{className:fullScreen?'':classes.dialogFormBody},React.createElement(DialogContent,{className:classes.dialogInsertImage},imgUrl!==undefined&&React.createElement(\"img\",{src:imgUrl,className:classes.imgPreview,alt:\"Your upload\"}),React.createElement(\"input\",{accept:\"image/*\",className:classes.input,style:{display:'none'},id:\"raised-button-file\",type:\"file\",onChange:handleImageChange}),React.createElement(\"label\",{htmlFor:\"raised-button-file\"},React.createElement(Button,{className:classes.addImageBtn,variant:\"outlined\",component:\"span\",startIcon:React.createElement(InsertPhotoIcon,{fontSize:\"large\"})},\"Insert Image\"))),React.createElement(DialogContent,null,questions.map(function(question,idx){return React.createElement(DialogContent,{key:idx},React.createElement(DialogContentText,null,question),React.createElement(TextField,{autoFocus:idx===0,margin:\"dense\",id:\"ans\"+idx,label:\"Answer\",type:\"text\",fullWidth:true,variant:\"filled\",multiline:true,rowsMax:\"4\"}));}))),React.createElement(DialogActions,null,React.createElement(Button,{onClick:handleClose,color:\"primary\"},\"Cancel\"),React.createElement(Button,{onClick:handleSubmit,color:\"primary\"},\"Submit\"))));}","map":{"version":3,"sources":["/home/will/Projects/sdhacks19/client/src/components/JournalEditor.jsx"],"names":["React","uploadFileToS3","Button","TextField","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","useMediaQuery","InsertPhotoIcon","useTheme","makeStyles","useStyles","theme","addBtn","background","border","borderRadius","color","padding","minWidth","minHeight","addImageBtn","imgPreview","width","margin","dialogFormBody","display","alignItems","dialogInsertImage","textAlign","input","JournalEditor","questions","classes","fullScreen","breakpoints","down","useState","open","setOpen","handleClickOpen","handleClose","setImgUrl","undefined","handleSubmit","imgFile","imgUrl","setImgFile","handleImageChange","e","URL","createObjectURL","target","files","Date","toLocaleString","map","question","idx"],"mappings":"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","sourcesContent":["import React from 'react';\nimport uploadFileToS3 from '../scripts/uploadFileToS3';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport InsertPhotoIcon from '@material-ui/icons/InsertPhoto';\nimport { useTheme } from '@material-ui/core/styles';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n    addBtn: {\n        background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n        border: 0,\n        borderRadius: 3,\n        color: 'white',\n        padding: '0 30px',\n        minWidth: 275,\n        minHeight: 275\n    },\n    addImageBtn: {\n        borderRadius: 3,\n        minWidth: 100,\n        padding: '10px 30px',\n    },\n    imgPreview: {\n        width: '90%',\n        margin: '10px'\n    },\n    dialogFormBody: {\n        display: 'flex',\n        alignItems: 'center'\n    },\n    dialogInsertImage: {\n        minWidth: 200,\n        textAlign: 'center',\n    },\n    input: {\n        display: 'none'\n    }\n}));\n\nexport default function JournalEditor({ questions /* array of strings */ }) {\n    const classes = useStyles();\n    const theme = useTheme();\n    const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n\n    const [open, setOpen] = React.useState(false);\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n        setImgUrl(undefined);\n    };\n\n    const handleSubmit = () => {\n        uploadFileToS3(imgFile);\n        handleClose();\n    }\n\n    const [imgUrl, setImgUrl] = React.useState(undefined);\n    const [imgFile, setImgFile] = React.useState(undefined);\n\n    const handleImageChange = (e) => {\n        setImgUrl(URL.createObjectURL(e.target.files[0]));\n        setImgFile(e.target.files[0]);\n    }\n\n    return (\n        <div>\n            <Button className={classes.addBtn} onClick={handleClickOpen}>\n                Write new entry\n            </Button>\n            <Dialog\n                open={open}\n                onClose={handleClose}\n                aria-labelledby=\"form-dialog-title\"\n                fullScreen={fullScreen}\n                maxWidth=\"lg\"\n                fullWidth\n            >\n                <DialogTitle id=\"form-dialog-title\">{(new Date()).toLocaleString()}</DialogTitle>\n                <DialogContent className={fullScreen ? '' : classes.dialogFormBody}>\n                    <DialogContent className={classes.dialogInsertImage}>\n                        {imgUrl !== undefined && <img src={imgUrl} className={classes.imgPreview} alt=\"Your upload\" />}\n                        <input\n                            accept=\"image/*\"\n                            className={classes.input}\n                            style={{ display: 'none' }}\n                            id=\"raised-button-file\"\n                            type=\"file\"\n                            onChange={handleImageChange}\n                        />\n                        <label htmlFor=\"raised-button-file\">\n                            <Button\n                                className={classes.addImageBtn}\n                                variant=\"outlined\"\n                                component=\"span\"\n                                startIcon={<InsertPhotoIcon fontSize=\"large\" />}\n                            >\n                                Insert Image\n                            </Button>\n                        </label>\n                    </DialogContent>\n                    <DialogContent>\n                        {\n                            questions.map((question, idx) => {\n                                return (\n                                    <DialogContent key={idx}>\n                                        <DialogContentText>\n                                            {question}\n                                        </DialogContentText>\n                                        <TextField\n                                            autoFocus={idx === 0}\n                                            margin=\"dense\"\n                                            id={\"ans\" + idx}\n                                            label=\"Answer\"\n                                            type=\"text\"\n                                            fullWidth\n                                            variant=\"filled\"\n                                            multiline\n                                            rowsMax=\"4\"\n                                        />\n                                    </DialogContent>\n                                );\n                            })\n                        }\n                    </DialogContent>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\">\n                        Cancel\n                    </Button>\n                    <Button onClick={handleSubmit} color=\"primary\">\n                        Submit\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from \"/home/will/Projects/sdhacks19/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/will/Projects/sdhacks19/src/components/JournalEditor.jsx\";\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport InsertPhotoIcon from '@material-ui/icons/InsertPhoto';\nimport { useTheme } from '@material-ui/core/styles';\nimport { makeStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles(theme => ({\n  addBtn: {\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n    border: 0,\n    borderRadius: 3,\n    color: 'white',\n    padding: '0 30px',\n    minWidth: 275,\n    minHeight: 275\n  },\n  addImageBtn: {\n    borderRadius: 3,\n    minWidth: 100,\n    // height: 100,\n    padding: '30px'\n  },\n  dialogFormBody: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  dialogInsertImage: {\n    minWidth: 200,\n    textAlign: 'center'\n  },\n  input: {\n    display: 'none'\n  }\n}));\nexport default function JournalEditor({\n  questions\n  /* array of strings */\n\n}) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n\n  const _React$useState = React.useState(false),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        open = _React$useState2[0],\n        setOpen = _React$useState2[1];\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const _React$useState3 = React.useState(undefined),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        imgUrl = _React$useState4[0],\n        setImgUrl = _React$useState4[1];\n\n  const handleImageChange = e => {\n    setImgUrl(URL.createObjectURL(e.target.files[0]));\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(Button, {\n    className: classes.addBtn,\n    onClick: handleClickOpen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"Write new entry\"), React.createElement(Dialog, {\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"form-dialog-title\",\n    fullScreen: fullScreen,\n    maxWidth: \"lg\",\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, new Date().toLocaleString()), React.createElement(DialogContent, {\n    className: classes.dialogFormBody,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(DialogContent, {\n    className: classes.dialogInsertImage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: imgUrl,\n    alt: \"Your upload\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    accept: \"image/*\",\n    className: classes.input,\n    style: {\n      display: 'none'\n    },\n    id: \"raised-button-file\",\n    type: \"file\",\n    onChange: handleImageChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"raised-button-file\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(Button, {\n    className: classes.addImageBtn,\n    variant: \"outlined\",\n    component: \"span\",\n    startIcon: React.createElement(InsertPhotoIcon, {\n      fontSize: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"Insert Image\"))), React.createElement(DialogContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, questions.map((question, idx) => {\n    return React.createElement(DialogContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(DialogContentText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, question), React.createElement(TextField, {\n      autoFocus: idx === 0,\n      margin: \"dense\",\n      id: \"ans\" + idx,\n      label: \"Answer\",\n      type: \"text\",\n      fullWidth: true,\n      variant: \"filled\",\n      multiline: true,\n      rowsMax: \"4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }));\n  }))), React.createElement(DialogActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: handleClose,\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, \"Cancel\"), React.createElement(Button, {\n    onClick: handleClose,\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, \"Submit\"))));\n}","map":{"version":3,"sources":["/home/will/Projects/sdhacks19/src/components/JournalEditor.jsx"],"names":["React","Button","TextField","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","useMediaQuery","InsertPhotoIcon","useTheme","makeStyles","useStyles","theme","addBtn","background","border","borderRadius","color","padding","minWidth","minHeight","addImageBtn","dialogFormBody","display","alignItems","dialogInsertImage","textAlign","input","JournalEditor","questions","classes","fullScreen","breakpoints","down","useState","open","setOpen","handleClickOpen","handleClose","undefined","imgUrl","setImgUrl","handleImageChange","e","URL","createObjectURL","target","files","Date","toLocaleString","map","question","idx"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,iBAAP,MAA8B,qCAA9B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,eAAP,MAA4B,gCAA5B;AACA,SAASC,QAAT,QAAyB,0BAAzB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AAEA,MAAMC,SAAS,GAAGD,UAAU,CAACE,KAAK,KAAK;AACnCC,EAAAA,MAAM,EAAE;AACJC,IAAAA,UAAU,EAAE,kDADR;AAEJC,IAAAA,MAAM,EAAE,CAFJ;AAGJC,IAAAA,YAAY,EAAE,CAHV;AAIJC,IAAAA,KAAK,EAAE,OAJH;AAKJC,IAAAA,OAAO,EAAE,QALL;AAMJC,IAAAA,QAAQ,EAAE,GANN;AAOJC,IAAAA,SAAS,EAAE;AAPP,GAD2B;AAUnCC,EAAAA,WAAW,EAAE;AACTL,IAAAA,YAAY,EAAE,CADL;AAETG,IAAAA,QAAQ,EAAE,GAFD;AAGT;AACAD,IAAAA,OAAO,EAAE;AAJA,GAVsB;AAgBnCI,EAAAA,cAAc,EAAE;AACZC,IAAAA,OAAO,EAAE,MADG;AAEZC,IAAAA,UAAU,EAAE;AAFA,GAhBmB;AAoBnCC,EAAAA,iBAAiB,EAAE;AACfN,IAAAA,QAAQ,EAAE,GADK;AAEfO,IAAAA,SAAS,EAAE;AAFI,GApBgB;AAwBnCC,EAAAA,KAAK,EAAE;AACHJ,IAAAA,OAAO,EAAE;AADN;AAxB4B,CAAL,CAAN,CAA5B;AA6BA,eAAe,SAASK,aAAT,CAAuB;AAAEC,EAAAA;AAAU;;AAAZ,CAAvB,EAA6D;AACxE,QAAMC,OAAO,GAAGnB,SAAS,EAAzB;AACA,QAAMC,KAAK,GAAGH,QAAQ,EAAtB;AACA,QAAMsB,UAAU,GAAGxB,aAAa,CAACK,KAAK,CAACoB,WAAN,CAAkBC,IAAlB,CAAuB,IAAvB,CAAD,CAAhC;;AAHwE,0BAKhDlC,KAAK,CAACmC,QAAN,CAAe,KAAf,CALgD;AAAA;AAAA,QAKjEC,IALiE;AAAA,QAK3DC,OAL2D;;AAMxE,QAAMC,eAAe,GAAG,MAAM;AAC1BD,IAAAA,OAAO,CAAC,IAAD,CAAP;AACH,GAFD;;AAIA,QAAME,WAAW,GAAG,MAAM;AACtBF,IAAAA,OAAO,CAAC,KAAD,CAAP;AACH,GAFD;;AAVwE,2BAc5CrC,KAAK,CAACmC,QAAN,CAAeK,SAAf,CAd4C;AAAA;AAAA,QAcjEC,MAdiE;AAAA,QAczDC,SAdyD;;AAgBxE,QAAMC,iBAAiB,GAAIC,CAAD,IAAO;AAC7BF,IAAAA,SAAS,CAACG,GAAG,CAACC,eAAJ,CAAoBF,CAAC,CAACG,MAAF,CAASC,KAAT,CAAe,CAAf,CAApB,CAAD,CAAT;AACH,GAFD;;AAIA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAEjB,OAAO,CAACjB,MAA3B;AAAmC,IAAA,OAAO,EAAEwB,eAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,EAII,oBAAC,MAAD;AACI,IAAA,IAAI,EAAEF,IADV;AAEI,IAAA,OAAO,EAAEG,WAFb;AAGI,uBAAgB,mBAHpB;AAII,IAAA,UAAU,EAAEP,UAJhB;AAKI,IAAA,QAAQ,EAAC,IALb;AAMI,IAAA,SAAS,MANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQI,oBAAC,WAAD;AAAa,IAAA,EAAE,EAAC,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsC,IAAIiB,IAAJ,EAAD,CAAaC,cAAb,EAArC,CARJ,EASI,oBAAC,aAAD;AAAe,IAAA,SAAS,EAAEnB,OAAO,CAACR,cAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,aAAD;AAAe,IAAA,SAAS,EAAEQ,OAAO,CAACL,iBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,GAAG,EAAEe,MAAV;AAAkB,IAAA,GAAG,EAAC,aAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AACI,IAAA,MAAM,EAAC,SADX;AAEI,IAAA,SAAS,EAAEV,OAAO,CAACH,KAFvB;AAGI,IAAA,KAAK,EAAE;AAAEJ,MAAAA,OAAO,EAAE;AAAX,KAHX;AAII,IAAA,EAAE,EAAC,oBAJP;AAKI,IAAA,IAAI,EAAC,MALT;AAMI,IAAA,QAAQ,EAAEmB,iBANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAUI;AAAO,IAAA,OAAO,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AACI,IAAA,SAAS,EAAEZ,OAAO,CAACT,WADvB;AAEI,IAAA,OAAO,EAAC,UAFZ;AAGI,IAAA,SAAS,EAAC,MAHd;AAII,IAAA,SAAS,EAAE,oBAAC,eAAD;AAAiB,MAAA,QAAQ,EAAC,OAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,CAVJ,CADJ,EAsBI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQQ,SAAS,CAACqB,GAAV,CAAc,CAACC,QAAD,EAAWC,GAAX,KAAmB;AAC7B,WACI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKD,QADL,CADJ,EAII,oBAAC,SAAD;AACI,MAAA,SAAS,EAAEC,GAAG,KAAK,CADvB;AAEI,MAAA,MAAM,EAAC,OAFX;AAGI,MAAA,EAAE,EAAE,QAAQA,GAHhB;AAII,MAAA,KAAK,EAAC,QAJV;AAKI,MAAA,IAAI,EAAC,MALT;AAMI,MAAA,SAAS,MANb;AAOI,MAAA,OAAO,EAAC,QAPZ;AAQI,MAAA,SAAS,MARb;AASI,MAAA,OAAO,EAAC,GATZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CADJ;AAkBH,GAnBD,CAFR,CAtBJ,CATJ,EAwDI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEd,WAAjB;AAA8B,IAAA,KAAK,EAAC,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAII,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEA,WAAjB;AAA8B,IAAA,KAAK,EAAC,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,CAxDJ,CAJJ,CADJ;AAwEH","sourcesContent":["import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport InsertPhotoIcon from '@material-ui/icons/InsertPhoto';\nimport { useTheme } from '@material-ui/core/styles';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n    addBtn: {\n        background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n        border: 0,\n        borderRadius: 3,\n        color: 'white',\n        padding: '0 30px',\n        minWidth: 275,\n        minHeight: 275\n    },\n    addImageBtn: {\n        borderRadius: 3,\n        minWidth: 100,\n        // height: 100,\n        padding: '30px',\n    },\n    dialogFormBody: {\n        display: 'flex',\n        alignItems: 'center'\n    },\n    dialogInsertImage: {\n        minWidth: 200,\n        textAlign: 'center',\n    },\n    input: {\n        display: 'none'\n    }\n}));\n\nexport default function JournalEditor({ questions /* array of strings */ }) {\n    const classes = useStyles();\n    const theme = useTheme();\n    const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n\n    const [open, setOpen] = React.useState(false);\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const [imgUrl, setImgUrl] = React.useState(undefined);\n\n    const handleImageChange = (e) => {\n        setImgUrl(URL.createObjectURL(e.target.files[0]));\n    }\n\n    return (\n        <div>\n            <Button className={classes.addBtn} onClick={handleClickOpen}>\n                Write new entry\n            </Button>\n            <Dialog\n                open={open}\n                onClose={handleClose}\n                aria-labelledby=\"form-dialog-title\"\n                fullScreen={fullScreen}\n                maxWidth=\"lg\"\n                fullWidth\n            >\n                <DialogTitle id=\"form-dialog-title\">{(new Date()).toLocaleString()}</DialogTitle>\n                <DialogContent className={classes.dialogFormBody}>\n                    <DialogContent className={classes.dialogInsertImage}>\n                        <img src={imgUrl} alt=\"Your upload\" />\n                        <input\n                            accept=\"image/*\"\n                            className={classes.input}\n                            style={{ display: 'none' }}\n                            id=\"raised-button-file\"\n                            type=\"file\"\n                            onChange={handleImageChange}\n                        />\n                        <label htmlFor=\"raised-button-file\">\n                            <Button\n                                className={classes.addImageBtn}\n                                variant=\"outlined\"\n                                component=\"span\"\n                                startIcon={<InsertPhotoIcon fontSize=\"large\" />}\n                            >\n                                Insert Image\n                            </Button>\n                        </label>\n                    </DialogContent>\n                    <DialogContent>\n                        {\n                            questions.map((question, idx) => {\n                                return (\n                                    <DialogContent>\n                                        <DialogContentText>\n                                            {question}\n                                        </DialogContentText>\n                                        <TextField\n                                            autoFocus={idx === 0}\n                                            margin=\"dense\"\n                                            id={\"ans\" + idx}\n                                            label=\"Answer\"\n                                            type=\"text\"\n                                            fullWidth\n                                            variant=\"filled\"\n                                            multiline\n                                            rowsMax=\"4\"\n                                        />\n                                    </DialogContent>\n                                );\n                            })\n                        }\n                    </DialogContent>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\">\n                        Cancel\n                    </Button>\n                    <Button onClick={handleClose} color=\"primary\">\n                        Submit\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}
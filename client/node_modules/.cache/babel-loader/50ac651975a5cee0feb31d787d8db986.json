{"ast":null,"code":"var _jsxFileName = \"/home/will/Projects/sdhacks19/src/components/JournalGrid.jsx\";\nimport AWS from 'aws-sdk';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport PastEntry from './PastEntry.jsx';\nimport JournalEditor from './JournalEditor.jsx';\nimport MonthBreak from './MonthBreak.jsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nAWS.config.update({\n  region: 'us-west-2'\n});\nconst s3 = new AWS.S3({\n  apiVersion: '2006-03-01'\n});\nconst BUCKET_NAME = \"sdhacks19-journal\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    margin: \"0 5rem\"\n  }\n}));\nconst QUESTIONS = [\"What did you do today?\", \"What are you doing tomorrow?\", \"LOL idk this is a very long question to test if the styling works please ignore or if you feel like answering please tell me what your favorite fruit is. Rules: it cannot be pineapple, or apple, or anything that is not watermelon because watermelon is the only correct answer. Choose carefully. LOL idk this is a very long question to test if the styling works please ignore or if you feel like answering please tell me what your favorite fruit is. Rules: it cannot be pineapple, or apple, or anything that is not watermelon because watermelon is the only correct answer. Choose carefully.\"];\nexport default function JournalGrid({\n  data\n}) {\n  const classes = useStyles(); // const renderEntries = () => (\n  //     // Loop through the entries and render a grid \n  //     for(i = 0; i < data.length; ++i) {\n  //     }\n  //     return entryGridItems;      ;\n\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(MonthBreak, {\n    date: new Date(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(JournalEditor, {\n    questions: QUESTIONS,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 4,\n    lg: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(PastEntry, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 4,\n    lg: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(PastEntry, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 4,\n    lg: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(PastEntry, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 4,\n    lg: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(PastEntry, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(MonthBreak, {\n    date: new Date(2000, 2, 9),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 4,\n    lg: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(PastEntry, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }))));\n}\nJournalGrid.propTypes = {\n  data: PropTypes.array\n};","map":{"version":3,"sources":["/home/will/Projects/sdhacks19/src/components/JournalGrid.jsx"],"names":["AWS","React","PropTypes","Grid","PastEntry","JournalEditor","MonthBreak","makeStyles","Button","config","update","region","s3","S3","apiVersion","BUCKET_NAME","useStyles","theme","root","margin","QUESTIONS","JournalGrid","data","classes","Date","propTypes","array"],"mappings":"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","sourcesContent":["import AWS from 'aws-sdk';\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Grid from '@material-ui/core/Grid';\nimport PastEntry from './PastEntry.jsx';\nimport JournalEditor from './JournalEditor.jsx';\nimport MonthBreak from './MonthBreak.jsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n\nAWS.config.update({ region: 'us-west-2' });\nconst s3 = new AWS.S3({ apiVersion: '2006-03-01' });\nconst BUCKET_NAME = \"sdhacks19-journal\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        margin: \"0 5rem\",\n    }\n}));\n\nconst QUESTIONS = [\n    \"What did you do today?\",\n    \"What are you doing tomorrow?\",\n    \"LOL idk this is a very long question to test if the styling works please ignore or if you feel like answering please tell me what your favorite fruit is. Rules: it cannot be pineapple, or apple, or anything that is not watermelon because watermelon is the only correct answer. Choose carefully. LOL idk this is a very long question to test if the styling works please ignore or if you feel like answering please tell me what your favorite fruit is. Rules: it cannot be pineapple, or apple, or anything that is not watermelon because watermelon is the only correct answer. Choose carefully.\"\n]\n\nexport default function JournalGrid({ data }) {\n    const classes = useStyles();\n\n\n    // const renderEntries = () => (\n    //     // Loop through the entries and render a grid \n    //     for(i = 0; i < data.length; ++i) {\n\n    //     }\n    //     return entryGridItems;      ;\n    return (\n        <div className={classes.root}>\n            <Grid container spacing={3}>\n                <Grid item xs={12}>\n                    <MonthBreak date={new Date()}></MonthBreak>\n                </Grid>\n                {/* <Grid item xs={12} md={4} lg={3}> */}\n                <Grid item>\n                    <JournalEditor questions={QUESTIONS} />\n                    {/* <Button variant=\"outlined\" size=\"large\" className={classes.addBtn}>\n                        Large\n                    </Button> */}\n                </Grid>\n                <Grid item xs={12} md={4} lg={3}>\n                    <PastEntry />\n                </Grid >\n                <Grid item xs={12} md={4} lg={3}>\n                    <PastEntry />\n                </Grid >\n                <Grid item xs={12} md={4} lg={3}>\n                    <PastEntry />\n                </Grid >\n                <Grid item xs={12} md={4} lg={3}>\n                    <PastEntry />\n                </Grid >\n                <Grid item xs={12}>\n                    <MonthBreak date={new Date(2000, 2, 9)}></MonthBreak>\n                </Grid>\n                <Grid item xs={12} md={4} lg={3}>\n                    <PastEntry />\n                </Grid >\n            </Grid>\n        </div>\n    );\n}\n\nJournalGrid.propTypes = {\n    data: PropTypes.array\n};"]},"metadata":{},"sourceType":"module"}